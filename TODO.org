* TODO-List
** Driver
*** TODO allow selecting/filtering schemas
*** TODO Add --benchmark option to not execute generated queries
*** TODO Add --target-schemas=
*** TODO cycles
**** TODO repetitive generation cannot be detected due to i++ identifier generation
**** TODO manually seeding w/ small value leads to cycle
** grammar
*** TODO [#A] Allow constraining productions by return type
needed for
- coalesce
- function calls
- nontrivial expressions
- insert/update

what productions need to be constrained?
- obviously exprs
- atomic value subselects => constraining the select list...

*** TODO [#A] Allow productions to fail in factories
- Make productions throw a smith::no_candidate : std::runtime_error
- Catch it and randomly pick another one.
- Maybe count errors and escalate at some point
*** TODO Add functions 						     :schema:
- convenient for pulling values out of nowhere (version(), now(), etc)
- Should be some coverage wrt. fuzzing (to_char...)
*** TODO Add aggregates 					     :schema:
- in window functions
- in group by
- need to find a way to constrain column-referencing exprs to contain
  an aggregate *somewhere*
  expr->agg->expr agg->expr expr->agg
  - maybe use needs_aggreate bool default argument to expr constructors
*** TODO Add GROUP BY
*** TODO Add window functions
*** TODO Add FILTER
*** TODO UPDATE
*** TODO INSERT
*** TODO DELETE
*** TODO [#C] Generate data for literal use in queries
*** TODO Improve random generation
- Add Attributes to rules so factories can pick candidates in a
  weighted fashion.
- This attribute could then also be used to blacklist productions for
  incompatible RDBMs
*** TODO Transactions
** schema
*** TODO DTRT with arrays
** TODO [#C] support more RDMBSs
- Should add more than postgresl early to avoid a point of no return
- Allow blacklisting of productions for RDBMs with gaps wrt standards
  conformance (probably depends on improved random generation)
- Allow automatic detection of problematic productions via stats visitor
** relmodel
*** TODO [#C] operations on Tuples
instead of hacking up tuples inside productions it's more sensible to
implement operators in relmodel.cc join() project() union() select()
*** TODO [#C] Introduce basic semantic modeling
- use sampling of witness tuples instead of working on whole data base
*** TODO [#C] primitive cost model
** Performance

| revision      | queries/s | nodes |
|---------------+-----------+-------|
| ee9c94f-dirty |       208 |     ? |
| 4547909-dirty |       125 |    72 |
| 7fa25c6-dirty |       156 |    54 |
| 32a5d2a       |       188 |    54 |
| 3a29a40       |       238 |    54 |
| 57101e2       |       193 |    54 |

